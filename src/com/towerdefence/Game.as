package com.towerdefence{	import flash.display.Sprite;	import flash.events.*;		import com.towerdefence.levels.*;	import flash.text.TextField;	public class Game extends Sprite 	{				//---------------------------------------		// PRIVATE METHODS		//---------------------------------------		private var _universe:Universe;				private var _levelManager:LevelManager;		private var _currentLevel:LevelBase;				private var _debugText:TextField;				//---------------------------------------		// CONSTRUCTOR		//---------------------------------------				/**		 * @constructor		 */		public function Game()		{			if (stage)			{				init();			}			else			{				addEventListener(Event.ADDED_TO_STAGE, init);			}		}				/**		 */		private function init(event:Event = null):void		{			// Игровой мир			_universe = new Universe();			addChild(_universe);						// Создаем менеджер уровней и загружаем уровень			_levelManager = new LevelManager();			_currentLevel = _levelManager.getLevel(1);			_currentLevel.load();						addEventListener(MouseEvent.MOUSE_MOVE, mouseEventHandler);			addEventListener(MouseEvent.CLICK, mouseClickHandler);			stage.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);						// Отладочная информация			var debugClip:Sprite = new DebugText_mc();			addChild(debugClip);						if (debugClip["textField"] != null)			{				_debugText = debugClip["textField"] as TextField;			}			addEventListener(Event.ENTER_FRAME, enterFrameHandler);						removeEventListener(Event.ADDED_TO_STAGE, init);		}				//---------------------------------------		// EVENT HANDLERS		//---------------------------------------				/**		 * @private		 */		private function enterFrameHandler(event:Event):void		{			_debugText.text = "soldiers: " + _universe.cacheEnemySoldier.size.toString() + "\n" +			 	"jeeps: " + _universe.cacheEnemyJeep.size.toString() + "\n" +				"tanks: " + _universe.cacheEnemyTank.size.toString() + "\n" +				"bullets: " + _universe.cacheGunBullet.size.toString() + "\n" +				"towers: " + _universe.cacheGunTower.size.toString();		}				/**		 * @private		 */		private function mouseClickHandler(event:MouseEvent):void		{			_universe.buildTower();		}				/**		 * Перехват координат мыши.		 */		private function mouseEventHandler(event:MouseEvent):void		{			_universe.updateMousePos(event.stageX, event.stageY);		}				/**		 * Перехват нажатия клавиш.		 */		private function keyDownHandler(event:KeyboardEvent):void		{			//_universe.newEnemy(); // Добавляем врага		}		}	}