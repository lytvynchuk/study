package com.towerdefence {import com.framework.SWFProfiler;import flash.display.SimpleButton;import flash.display.Sprite;import flash.events.Event;import flash.events.MouseEvent;[SWF(frameRate=30, height=480, width=640)]public class App extends Sprite {    //---------------------------------------    // CLASS CONSTANTS    //---------------------------------------    public static const APP_VERSION:String = "TowerDefence 0.12 - Dec 12, 2011";    // Размер документа по ширине/высоте    public static const SCREEN_WIDTH:int = 640;    public static const SCREEN_HEIGHT:int = 480;    // Середина документа по ширине/высоте    public static const SCREEN_WIDTH_HALF:int = 320;    public static const SCREEN_HEIGHT_HALF:int = 240;    //---------------------------------------    // PRIVATE VARIABLES    //---------------------------------------    private var _game:Game;    private var _editor:Editor;    private var _btnGame:SimpleButton;    private var _btnEditor:SimpleButton;    //---------------------------------------    // CONSTRUCTOR    //---------------------------------------    /**     * @constructor     */    public function App() {        trace(APP_VERSION);        if (stage) {            init();        }        else {            addEventListener(Event.ADDED_TO_STAGE, init);        }    }    /**     * Инициализация приложения.     */    public function init(event:Event = null):void {        SWFProfiler.init(stage, this);        // Кнопка "Game"        _btnGame = new Game_btn();        _btnGame.x = SCREEN_WIDTH_HALF;        _btnGame.y = SCREEN_WIDTH_HALF - 120;        _btnGame.addEventListener(MouseEvent.CLICK, gameClickHandler);        addChild(_btnGame);        // Кнопка "Editor"        _btnEditor = new Editor_btn();        _btnEditor.x = SCREEN_WIDTH_HALF;        _btnEditor.y = SCREEN_HEIGHT_HALF + 40;        _btnEditor.addEventListener(MouseEvent.CLICK, editorClickHandler);        _btnEditor.visible = false;        addChild(_btnEditor);    }    //---------------------------------------    // PRIVATE METHODS    //---------------------------------------    /**     * Удаляет кнопки.     */    private function free():void {        removeChild(_btnGame);        removeChild(_btnEditor);        _btnGame.removeEventListener(MouseEvent.CLICK, gameClickHandler);        _btnEditor.removeEventListener(MouseEvent.CLICK, editorClickHandler);        _btnGame = null;        _btnEditor = null;    }    //---------------------------------------    // EVENT HANDLERS    //---------------------------------------    /**     * Клик на кнопку "Game".     */    private function gameClickHandler(event:Event):void {        _game = new Game();        addChild(_game);        free();    }    /**     * Клик на кнопку "Editor".     */    private function editorClickHandler(event:Event):void {        _editor = new Editor();        addChild(_editor);        free();    }}}